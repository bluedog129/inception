server {

# based on https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/
# https://nginx.org/en/docs/ngx_core_module.html
# https://nginx.org/en/docs/dirindex.html

        # listen 443 ssl; 명령은 Nginx가 443 포트를 사용하여 SSL/TLS 암호화된 연결을 수신하도록 지시합니다. 
        # HTTPS 통신에 사용되는 표준 포트는 443입니다. 이 설정은 IPv4 연결에 적용됩니다. 
        listen 443 ssl;
        listen [::]:443 ssl;
        # 이 서버 블록이 hyojocho.42.fr 도메인으로 들어오는 요청을 처리하도록 지정
        server_name hyojocho.42.fr;

        # ssl_certificate 지시어는 서버의 SSL 인증서 파일의 위치를 지정합니다. 
        # 여기서는 /etc/nginx/ssl/hyojocho.crt에 위치한 인증서를 사용합니다.
        ssl_certificate         /etc/nginx/ssl/hyojocho.crt;
        ssl_certificate_key     /etc/nginx/ssl/hyojocho.key;
        # ssl_protocols 지시어는 서버가 지원할 SSL/TLS 프로토콜의 버전을 지정합니다. 
        # 여기서는 TLS 버전 1.2와 1.3을 사용하도록 설정
        ssl_protocols           TLSv1.2 TLSv1.3;

        # root 지시어는 Nginx 서버 블록의 문서 루트 디렉토리를 설정합니다. 이 예에서는 /var/www/html로 설정되어 있습니다. 
        # 이는 Nginx가 클라이언트로부터 요청을 받았을 때, 요청된 파일을 찾기 위해 검색을 시작하는 디렉토리
        root /var/www/html;

        # index 지시어는 클라이언트가 특정 디렉토리에 대한 요청을 했을 때, 
        # Nginx가 반환할 기본 파일을 지정합니다. 이 경우, index.php가 지정되어 있습니다. 
        # 이는 클라이언트가 디렉토리 자체를 요청했을 때 (예: https://hyojocho.42.fr/) Nginx가 자동으로 index.php 파일을 찾아서 제공하도록 설정
        index index.php;

        # location / 블록: 이 지시어는 서버의 루트 URL (예: http://yourdomain.com/)로 들어오는 모든 요청을 처리합니다. 
        # 여기서 설정된 규칙은 루트 URL 뿐만 아니라 모든 하위 경로에도 적용
        location / {
                # 동적 컨텐츠가 필요한 경우(예: WordPress 페이지 또는 게시물)에는 해당 요청이 
                # index.php를 통해 적절히 처리될 수 있도록 함
                try_files $uri $uri/ /index.php?$args;
        }

        #  정규 표현식을 사용하여 .php로 끝나는 모든 요청을 처리
        location ~ \.php$ {
                #https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/
                #https://serverfault.com/questions/627903/is-the-php-option-cgi-fix-pathinfo-really-dangerous-with-nginx-php-fpm
                # fastcgi_params 파일을 포함시켜, FastCGI 프로세스에 전달될 기본 매개변수들을 설정합니다. 
                # 이 파일에는 PHP-FPM과 통신하는 데 필요한 기본 FastCGI 매개변수들이 정의
                include fastcgi_params;
                # FastCGI 서버로부터의 오류 응답을 Nginx가 가로채어 처리
                fastcgi_intercept_errors on; 
                # 여기서는 wordpress라는 이름의 서버(또는 서비스)에 9000 포트를 통해 PHP 요청을 전달하도록 설정
                fastcgi_pass wordpress:9000;
                # SCRIPT_FILENAME 매개변수의 값을 설정합니다. 
                # $document_root와 $fastcgi_script_name 변수를 결합하여, 요청된 PHP 스크립트의 절대 경로를 생성
                fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
}